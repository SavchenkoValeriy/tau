name: Build & Test

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-12
          - ubuntu-22.04
        configuration:
          - Release
          - Debug
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Install GCC
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test && \
          sudo apt-get update && \
          sudo apt-get -y install gcc-12 g++-12 && \
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 12 && \
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 12
      - name: Check LLVM cache
        uses: actions/cache@v2
        id: cache-llvm-deps
        with:
          path: .llvm
          key: llvm-deps-${{ matrix.os }}-15
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        if: steps.cache-llvm-deps.outputs.cache-hit != 'true'
        with:
          version: 15
          directory: .llvm
      - name: Set downloaded Clang as CC/CXX
        if: runner.os == 'macOS'
        run: |
          echo "CC=${{ github.workspace }}/.llvm/bin/clang" >> $GITHUB_ENV && \
          echo "CXX=${{ github.workspace }}/.llvm/bin/clang++" >> $GITHUB_ENV
      - run: pip3 install lit
      - run: cmake . -DTAU_CLANG_PATH=.llvm -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -Bbuild -G Ninja
      - run: ninja check
        working-directory: build
